/*
 * @Author: syy
 * @Date: 2018-09-04 14:45:48
 * @Description: 描述
 * @Last Modified by: syy
 * @Last Modified time: 2018-09-11 17:15:27
 */

import React, { PureComponent } from 'react';
import { SearchBar, Toast, NavBar, Icon } from 'antd-mobile';
import { connect } from 'dva';
import router from 'umi/router';
import InfiniteScroll from 'react-infinite-scroller';
import styles from './videoPlayer.less';

class VideoPlayer extends PureComponent {
  componentDidMount() {
    const { dispatch } = this.props;
    dispatch({
      type: 'videoplayer/changeState',
      payload: {
        videoList: [],
        page: 1,
        pageSize: 10,
        search: '',
        loading: true,
      },
    });

    dispatch({
      type: 'videoplayer/getVideoList',
    });
  }

  /**
   * 视频列表点击事件
   */
  onVideoItemClick = item => {
    const { dispatch } = this.props;
    dispatch({
      type: 'videoplayer/changeState',
      payload: {
        videoName: item.videoTitle,
        lookCount: item.viewsCount,
        src: item.viewPath,
        id: item.id,
      },
    });
    router.push('./VideoDetails');
  };

  /**
   * 加载更多
   */
  loadMore = () => {
    const { dispatch, videoplayer } = this.props;
    const { pageCount, page } = videoplayer;
    console.log('pageCount', pageCount);
    console.log('page', page);
    const page1 = parseInt(page);
    if (page1 < pageCount) {
      dispatch({
        type: 'videoplayer/changeState',
        payload: {
          page: page1 + 1,
          loading: true,
        },
      });
      dispatch({
        type: 'videoplayer/getVideoList',
      });
    }
  };

  /**
   * 搜索事件
   */
  search = value => {
    Toast.info(value, 2);
  };

  /**
   * 获取视频列表
   */
  getVideoList() {
    const { videoplayer } = this.props;
    const { videoList } = videoplayer;
    const { onVideoItemClick } = this;
    return videoList.map((item, index) => {
      const videoSrc = item.thumb;
      const contents = item.videoTitle;
      const key = `list${index}`;
      return (
        <div
          key={key}
          className={styles.itemLayout}
          onClick={() => {
            onVideoItemClick({ ...item });
          }}
        >
          <div className={styles.item}>
            <img className={styles.img} src={videoSrc} alt="" />
            <span className={styles.content}>{contents}</span>
          </div>
        </div>
      );
    });
  }

  /**
   * 返回到主页
   */
  back = () => {
    router.push('./VideoDetails');
  };

  render() {
    const { loadMore } = this;
    const { videoplayer } = this.props;
    const { loading, page, pageCount } = videoplayer;
    const hasMore = parseInt(page) < pageCount;
    return (
      <div className={styles.bg}>
        <NavBar
          mode="light"
          icon={<Icon type="left" size="lg" />}
          onLeftClick={() => {
            router.push('/');
          }}
        >
          我的视频
        </NavBar>
        <SearchBar placeholder="请输入视频名称" onSubmit={val => this.search(val)} />
        <div className={styles.list}>
          <div className={styles.ItemBg}>
            <InfiniteScroll
              initialLoad={false}
              pageStart={0}
              hasMore={loading && hasMore}
              loadMore={loadMore}
            >
              <div>{this.getVideoList()}</div>
            </InfiniteScroll>
          </div>
        </div>
      </div>
    );
  }
}

function mapStateToProps({ videoplayer }) {
  return {
    videoplayer,
  };
}

export default connect(mapStateToProps)(VideoPlayer);
