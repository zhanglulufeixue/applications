import React, { PureComponent } from 'react';
import { connect } from 'dva';
import { Tabs, NavBar, Icon } from 'antd-mobile';
import router from 'umi/router';
import styles from './statistics.less';
import Highcharts from 'highcharts/highstock';
import StatisticsList from '../../components/Statstics/StatsticsList';

class BasicLayout extends PureComponent {
  componentDidMount() {
    const { dispatch } = this.props;
    dispatch({
      type: 'statistics/statistics',
    });
    const chart = Highcharts.chart('container', {
      chart: {
        plotBackgroundColor: null,
        plotBorderWidth: null,
        plotShadow: false,
      },

      title: {
        text: '我是一个扇形',
      },

      tooltip: {},

      plotOptions: {
        pie: {
          allowPointSelect: true,
          cursor: 'pointer',
          dataLabels: {
            enabled: true,
            format: '<b>{point.name}</b>: {point.percentage:.1f} %',
            style: {
              color: (Highcharts.theme && Highcharts.theme.contrastTextColor) || 'black',
            },
          },
          states: {
            hover: {
              enabled: false,
            },
          },
          slicedOffset: 20, // 突出间距
          point: {
            // 每个扇区是数据点对象，所以事件应该写在 point 下面
            events: {
              // 鼠标滑过是，突出当前扇区
              mouseOver: function() {
                this.slice();
              },
              // 鼠标移出时，收回突出显示
              mouseOut: function() {
                this.slice();
              },
              // 默认是点击突出，这里屏蔽掉
              click: function() {
                return false;
              },
            },
          },
        },
      },

      series: [
        {
          type: 'pie',
          name: '浏览器访问量占比',
          data: [
            ['Firefox', 45.0],
            ['IE', 26.8],
            {
              name: 'Chrome',
              y: 12.8,
              sliced: true, // 突出显示这个点（扇区），用于强调。
            },
            ['Safari', 8.5],
            ['Opera', 6.2],
            ['其他', 0.7],
          ],
        },
      ],
    });
  }
  tabClick = (tab, index) => {
    console.log('点击Tab---tab', tab.title);
    console.log('点击Tab---index', index);
  };
  render() {
    const tab = [
      { title: '直播', sub: '1' },
      { title: '大屏', sub: '2' },
      { title: '录播', sub: '3' },
      { title: '班牌', sub: '4' },
      { title: '视频', sub: '5' },
    ];
    // const { statistics } = this.props;
    // const { videoPlayerPic, liveVideoPic, tourCoursePic } = statistics;
    const mapProps = {
      teacherList: [
        { name: '张明阳', num: 20 }, 
        { name: '郑少芬', num: 16 },
        { name: '单云彦', num: 20 }, 
        { name: '张路路', num: 60 }, 
        { name: '候英豪', num: 100 },
        { name: '王龙飞', num: 20000 }]
    }
    return (
      <div>
        <NavBar
          mode="light"
          icon={<Icon type="left" size="lg" />}
          onLeftClick={() => {
            router.push('/');
          }}
        >
          统计
        </NavBar>
        <div className={styles.line} />
        <Tabs
          tabs={tab}
          initialPage={1}
          onTabClick={(tab, index) => {
            this.tabClick(tab, index);
          }}
        >
          {/* <img className={styles.img} src={liveVideoPic} alt="" />
          <img className={styles.img} src={tourCoursePic} alt="" />
          <img className={styles.img} src={videoPlayerPic} alt="" /> */}
          <div id="container" className={styles.img} />
          {<StatisticsList {...mapProps}></StatisticsList>}
        </Tabs>
      </div>
    );
  }
}

function mapStateToProps({ statistics }) {
  return {
    statistics,
  };
}

export default connect(mapStateToProps)(BasicLayout);
