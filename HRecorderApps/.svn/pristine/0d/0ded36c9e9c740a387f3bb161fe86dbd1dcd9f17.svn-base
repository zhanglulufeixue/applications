import React, { PureComponent } from 'react';
import { connect } from 'dva';
import Highcharts from 'highcharts/highstock';
import styles from './StatsticsChart.less';

class ChartBigScreen extends PureComponent {
  componentDidMount() {
    const chart = Highcharts.chart('containerBigScreen', {
      chart: {
        plotBackgroundColor: null,
        plotBorderWidth: null,
        plotShadow: false,
      },

      title: {
        text: '我是一个扇形',
      },

      tooltip: {},

      plotOptions: {
        pie: {
          allowPointSelect: true,
          cursor: 'pointer',
          dataLabels: {
            enabled: true,
            format: '<b>{point.name}</b>: {point.percentage:.1f} %',
            style: {
              color: (Highcharts.theme && Highcharts.theme.contrastTextColor) || 'black',
            },
          },
          states: {
            hover: {
              enabled: false,
            },
          },
          slicedOffset: 20, // 突出间距
          point: {
            // 每个扇区是数据点对象，所以事件应该写在 point 下面
            events: {
              // 鼠标滑过是，突出当前扇区
              mouseOver: function() {
                this.slice();
              },
              // 鼠标移出时，收回突出显示
              mouseOut: function() {
                this.slice();
              },
              // 默认是点击突出，这里屏蔽掉
              click: function() {
                return false;
              },
            },
          },
        },
      },

      series: [
        {
          type: 'pie',
          name: '浏览器访问量占比',
          data: [
            ['Firefox', 45.0],
            ['IE', 26.8],
            {
              name: 'Chrome',
              y: 12.8,
              sliced: true, // 突出显示这个点（扇区），用于强调。
            },
            ['Safari', 8.5],
            ['Opera', 6.2],
            ['其他', 0.7],
          ],
        },
      ],
    });
  }
  render() {
    return <div id="containerBigScreen" className={styles.img} />;
  }
}

export default connect()(ChartBigScreen);
