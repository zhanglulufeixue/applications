/**
 * 预约失败列表路由组件
 * 
 */
import React, { PureComponent } from 'react';
import moment from 'moment';
import { connect } from 'dva';
import { Steps, Button, Calendar, Icon, NavBar } from 'antd-mobile';
import styles from './orderFailList.less';
import router from 'umi/router';
import { createForm } from 'rc-form';

class orderFailList extends PureComponent {

  state = {
    show: false,
    startTime : '',
    endTime: '',
    currentDate: moment(),
  };

  // 取消预约按钮回调
  cancelHandler = () => {
    router.push('/liveVideo/components/orderModal');
  };

  // 点击预约按钮事件
  orderHandler = () => {
    router.push('/liveVideo/components/parentWatch');
  };

  // 日历选择日期
  onConfirm = (startTime, endTime) => {
    document.getElementsByTagName('body')[0].style.overflowY = this.originbodyScrollY;
    this.setState({
      show: false,
      startTime,
      endTime,
      currentDate: moment(startTime),
    });
  }

  // 日历取消
  onCancel = () => {
    document.getElementsByTagName('body')[0].style.overflowY = this.originbodyScrollY;
    this.setState({
      show: false,
      startTime: undefined,
      endTime: undefined,
    });
  }

  // 点击日期弹出日历
  timeClick = () => {
    this.setState({
        show: true,
      });
  }

  // 左侧日期点击
  leftDateClick = () => {
    const { currentDate } = this.state;
    const newDate = currentDate.add(-1, 'day');

    this.setState({
      currentDate: newDate,
    });
    this.forceUpdate();

  };

  // 右侧日期点击
  rightDateClick = () => {
    const { currentDate } = this.state;
    const newDate = currentDate.add(1, 'day');
    
    this.setState({
      currentDate: newDate,
    });
    this.forceUpdate();

  };

  render() {
    const { show, currentDate } = this.state;

    return (
        <div>
          <NavBar
            key='order'
            mode="light"
            icon={<Icon type="left" size="lg" />}
            onLeftClick={this.cancelHandler}
          >
          预约失败
          </NavBar>
            <span className={styles.mark}>原因：当前时间预约直播过多，请调整直播时间</span>
            <div className={styles.timeSelect} >
              <Icon type='left' onClick={this.leftDateClick} style={{ verticalAlign: 'middle'}}></Icon>
              <span className={styles.date}  onClick={this.timeClick}>{currentDate.format('YYYY-MM-DD') || ''}</span>
              <Icon type='right' onClick={this.rightDateClick} style={{ verticalAlign: 'middle'}}></Icon>
            </div>
            <Calendar
                type={'one'}
                visible={show}
                onCancel={this.onCancel}
                onConfirm={this.onConfirm}
                minDate={new Date()}
                defaultDate={new Date()}
            ></Calendar>
            <div className={styles.stepBar}>
                <Steps size="small" direction="vertical" current={10}>
                    <Steps.Step title="08：00" description={<div className={styles.description}>不可预约</div>} icon={<div className={styles.stepIcon}></div>} />
                    <Steps.Step title="09：00" description={<div className={styles.description}>不可预约</div>} icon={<div className={styles.stepIcon}></div>} />
                    <Steps.Step title="10：00" description={<div className={styles.descriptionOrder}>可预约</div>} icon={<div className={styles.stepIcon}></div>} />
                    <Steps.Step title="11：00" description={<div className={styles.descriptionOrder}>可预约</div>} icon={<div className={styles.stepIcon}></div>} />
                    <Steps.Step title="12：00" description={<div className={styles.description}>不可预约</div>} icon={<div className={styles.stepIcon}></div>} />
                    <Steps.Step title="13：00" description={<div className={styles.description}>不可预约</div>} icon={<div className={styles.stepIcon}></div>} />
                    <Steps.Step title="14：00" description={<div className={styles.description}>不可预约</div>} icon={<div className={styles.stepIcon}></div>} />
                    <Steps.Step title="15：00" description={<div className={styles.description}>不可预约</div>} icon={<div className={styles.stepIcon}></div>} />
                    <Steps.Step title="16：00" description={<div className={styles.description}>不可预约</div>} icon={<div className={styles.stepIcon}></div>} />
                    <Steps.Step title="17：00" description='' icon={<div className={styles.stepIcon}></div>} />
                </Steps>
            </div>
            <div  className={styles.btns}>
                <Button inline onClick={this.orderHandler}>调整时间</Button>
        </div>
        </div>
    );
  }
}
function mapStateToProps({ liveVideo }) {
  return {
    liveVideo,
  };
}

export default connect(mapStateToProps)(createForm()(orderFailList));