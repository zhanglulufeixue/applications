/*
 * @Author: syy
 * @Date: 2018-09-04 14:45:48
 * @Description: 描述
 * @Last Modified by: lulu Zhang
 * @Last Modified time: 2018-09-29 15:57:49
 */

import React, { PureComponent } from 'react';
import { SearchBar, Toast, NavBar, Icon, Checkbox } from 'antd-mobile';
import { connect } from 'dva';
import router from 'umi/router';
import InfiniteScroll from 'react-infinite-scroller';
import styles from './index.less';
import Nodata from '../../assets/no-data.png';

const CheckboxItem = Checkbox.CheckboxItem;
class VideoPlayer extends PureComponent {
  state = {
    deleteList: [],
    checked: null,
  };

  componentDidMount() {
    const { dispatch } = this.props;
    dispatch({
      type: 'videoplayer/changeState',
      payload: {
        videoList: [],
        page: 1,
        pageSize: 10,
        search: '',
        loading: true,
      },
    });

    dispatch({
      type: 'videoplayer/getVideoList',
    });
  }

  /**
   * 视频列表点击事件
   */
  onVideoItemClick = item => {
    const { dispatch } = this.props;
    dispatch({
      type: 'videoplayer/changeState',
      payload: {
        videoName: item.videoTitle,
        lookCount: item.viewsCount,
        src: item.viewPath,
        id: item.id,
      },
    });
    router.push('./Details');
  };

  /**
   * 加载更多
   */
  loadMore = () => {
    const { dispatch, videoplayer } = this.props;
    const { pageCount, page } = videoplayer;
    if (page < pageCount) {
      dispatch({
        type: 'videoplayer/changeState',
        payload: {
          page: page + 1,
          loading: true,
        },
      });
      dispatch({
        type: 'videoplayer/getVideoList',
      });
    }
  };

  /**
   * 搜索事件
   */
  search = value => {
    const { dispatch } = this.props;
    dispatch({
      type: 'videoplayer/changeState',
      payload: {
        videoList: [],
        page: 1,
        pageSize: 10,
        search: value,
        loading: true,
      },
    });

    dispatch({
      type: 'videoplayer/getVideoList',
    });
  };

  /**
   * 监听搜索框内字的变化
   */
  onChange = val => {
    if (val === '' || val === undefined) {
      const { dispatch } = this.props;
      dispatch({
        type: 'videoplayer/changeState',
        payload: {
          videoList: [],
          page: 1,
          pageSize: 10,
          search: '',
          loading: true,
        },
      });

      dispatch({
        type: 'videoplayer/getVideoList',
      });
    }
  };

  /**
   * 获取视频列表
   */
  getVideoList() {
    const { videoplayer } = this.props;
    const { videoList } = videoplayer;
    const { onVideoItemClick } = this;
    const { checked } = this.state;
    return videoList.map((item, index) => {
      const videoSrc = item.thumb;
      const contents = item.videoTitle;
      const id = item.id;
      const key = `list${index}`;
      return (
        <div
          key={key}
          className={styles.itemLayout}
          // onClick={() => {
          //   // onVideoItemClick({ ...item });
          // }}
        >
          <div>
            <input
              id={id}
              type="checkBox"
              onChange={val => {
                this.onMyChange(val.target.checked, id);
              }}
            />
            <img className={styles.img} src={videoSrc} alt="" />
            <span className={styles.content}>{contents}</span>
          </div>
        </div>
      );
    });
  }

  onMyChange = (val, id) => {
    const { deleteList } = this.state;
    console.log('val', val);
    console.log('id', id);
    //如果是选中
    if (val) {
      deleteList.push(id);
    } else {
      if (deleteList.length > 0) {
        for (let i = 0; i < deleteList.length; i++) {
          if (deleteList[i] === id) {
            deleteList.splice(i, 1);
          }
        }
      }
    }

    console.log('deleteList---自己手动选中', deleteList);
    this.setState({
      deleteList: deleteList,
    });
  };

  /**
   * 上传按钮点击事件
   */
  uploadHandler = () => {
    // router.push('/videoPlayer/UploadVideo');
    const { videoplayer } = this.props;
    const { videoList } = videoplayer;
    let idList = [];
    for (let i = 0; i < videoList.length; i++) {
      idList.push(videoList[i].id);
      const a = document.getElementById(videoList[i].id);
      a.checked = true;
    }
    console.log('idList+++++++++', idList);
    this.setState({
      deleteList: idList,
    });
  };

  /**
   * 返回到主页
   */
  back = () => {};

  selectAll = () => {
    const { videoplayer } = this.props;
    const { videoList } = videoplayer;
    let idList = [];
    for (let i = 0; i < videoList.length; i++) {
      idList.push(videoList[i].id);
      const a = document.getElementById(videoList[i].id);
      a.checked = true;
    }
    console.log('idList+++++++++', idList);
    this.setState({
      deleteList: idList,
    });
  };

  cancalSelectAll = () => {
    this.setState({
      deleteList: [],
    });
    const { videoplayer } = this.props;
    const { videoList } = videoplayer;
    for (let i = 0; i < videoList.length; i++) {
      const a = document.getElementById(videoList[i].id);
      a.checked = false;
    }
  };

  render() {
    const { loadMore } = this;
    const { videoplayer } = this.props;
    const { loading, page, pageCount, videoList, search } = videoplayer;
    const hasMore = page < pageCount;
    return (
      <div>
        <NavBar
          mode="light"
          icon={<Icon type="left" size="lg" />}
          onLeftClick={() => {
            router.push('/');
          }}
          rightContent={[
            <Icon
              key="upload-add"
              type="plus"
              style={{ marginRight: '5%' }}
              onClick={this.uploadHandler}
            />,
          ]}
        >
          视频
        </NavBar>
        {videoList.length === 0 && search === '' ? (
          <div className={styles.nodataLayout}>
            <img className={styles.nodateImg} src={Nodata} alt="" />
            <div className={styles.nodataContent}>Opps！暂无视频信息</div>
          </div>
        ) : videoList.length === 0 && search !== '' ? (
          <div>
            <SearchBar
              placeholder="视频名称"
              onSubmit={val => this.search(val)}
              onChange={val => this.onChange(val)}
            />
            <div className={styles.nodataLayout}>
              <img className={styles.nodateImg} src={Nodata} alt="" />
              <div className={styles.nodataContent}>Opps！未搜索到相关视频</div>
            </div>
          </div>
        ) : (
          <div>
            <SearchBar
              placeholder="视频名称"
              onSubmit={val => this.search(val)}
              onChange={val => this.onChange(val)}
            />
            <div className={styles.list}>
              <InfiniteScroll
                initialLoad={false}
                pageStart={0}
                loadMore={loadMore}
                hasMore={loading && hasMore}
                loader={
                  <div key={0} className="loader">
                    Loading...
                  </div>
                }
              >
                <div>{this.getVideoList()}</div>
              </InfiniteScroll>
            </div>
            <div>
              <button onClick={this.selectAll}>全选</button>
              <button onClick={this.cancalSelectAll}>删除</button>
            </div>
          </div>
        )}
      </div>
    );
  }
}

function mapStateToProps({ videoplayer }) {
  return {
    videoplayer,
  };
}

export default connect(mapStateToProps)(VideoPlayer);
