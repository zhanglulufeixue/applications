import React, { PureComponent } from 'react';
import { createForm } from 'rc-form/lib';
import { connect } from 'dva';
import { Icon } from 'antd-mobile';
import styles from './watchVideo.css';
import router from 'umi/router';
import videojs from 'video.js';
import 'video.js/dist/video-js.css';
import 'videojs-flash';
import go from '../../assets/go.png';

const flash = require('videojs-swf/dist/video-js.swf');

class watchVideo extends PureComponent {
  componentDidMount() {
    const { dispatch, tourCourse } = this.props;
    const { tourId } = tourCourse;
    dispatch({
      type: 'tourCourse/changeState',
      payload: {
        otherLoading: true,
        otherVideoList: [],
        otherPage: 1,
        otherPageSize: 10,
        tourId: tourId,
      },
    });

    dispatch({
      type: 'tourCourse/getOtherVideoList',
    });
    setTimeout(() => {
      const { tourCourse } = this.props;
      const { src } = tourCourse;
      // const videoJsOptions = {
      //   techOrder: ['flash', 'html5'],

      //   autoplay: true,
      //   language: 'zh-CN',
      //   controls: true,
      //   playbackRates: [0.5, 1, 1.5, 2],
      //   nativeAudioTracks: true,
      //   sources: ['http://ivi.bupt.edu.cn/hls/cctv1hd.m3u8'],
      //   type:"application/x-mpegURL",
      //   preload: 'auto',
      //   loop: true,
      //   live: true,
      //   poster: '',
      //   flash: {
      //     swf: flash,
      //     hls: {
      //       withCredentials: true,
      //     },
      //   },
      // };

      // this.player = videojs(this.videoNode, videoJsOptions, () => {});
      this.player = videojs(
        'roomVideo',
        {
          bigPlayButton: false,
          textTrackDisplay: false,
          posterImage: true,
          errorDisplay: false,
          controlBar: false,
        },
        () => {}
      );
      this.player.play();
    }, 1000);
  }

  componentWillUnmount() {
    if (this.player) {
      this.player.dispose();
    }
  }

  /**
   * 视频列表点击事件
   */
  onVideoItemClick = item => {
    const { dispatch } = this.props;
    dispatch({
      type: 'tourCourse/changeState',
      payload: {
        src: item.computer,
        deviceName: item.deviceName,
        tourId: item.tourId,
        otherVideoList: [],
        otherPage: 1,
        otherPageSize: 10,
      },
    });

    dispatch({
      type: 'tourCourse/getOtherVideoList',
    });
  };

  back = () => {
    router.push('tourCourse');
  };
  // 获取镜头列表
  getTourCourseList = () => {
    const { tourCourse } = this.props;
    const { otherVideoList } = tourCourse;
    const { onVideoItemClick } = this;
    let isShowLine = true;
    if (otherVideoList.length === 0) {
      return;
    }
    return otherVideoList.map((item, index) => {
      if (index === otherVideoList.length - 1) {
        isShowLine = false;
      }
      return (
        <div
          key={item.id}
          onClick={() => {
            onVideoItemClick({ ...item });
          }}
        >
          <div>
            <div className={styles.deviceNameLayout}>
              <div className={styles.deviceName}>{item.deviceName}</div>
              <div className={styles.goLayout}>
                <img className={styles.go} src={go} alt="" />
              </div>

              {isShowLine && <div className={styles.line} />}
            </div>
          </div>
        </div>
      );
    });
  };

  render() {
    const { tourCourse } = this.props;
    const { deviceName } = tourCourse;
    return (
      <div>
        <div style={{ width: '100%', fontSize: '12px' }}>
          <div>
            <Icon type="left" size="sm" color="#fff" className={styles.back} onClick={this.back} />
          </div>
          <div>
            <video
              id="roomVideo"
              width="100%"
              className="video-js vjs-default-skin vjs- big-play-centered vjs-fluid"
              z-index="1"
            >
              <source src="http://ivi.bupt.edu.cn/hls/cctv1hd.m3u8" type="application/x-mpegURL" />
            </video>
          </div>
          <div />
          <div>
            <div className={styles.myDeviceName}>{deviceName}</div>
          </div>
          <div className={styles.line} />
          <div className={styles.elseClass}>其他班级</div>
          <div>{this.getTourCourseList()}</div>
        </div>
      </div>
    );
  }
}

function mapStateToProps({ tourCourse }) {
  return {
    tourCourse,
  };
}

export default connect(mapStateToProps)(createForm()(watchVideo));
